{"ast":null,"code":"var _jsxFileName = \"/Users/cyf/High Score Tables/src/Table.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Page = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"table-wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"title\",\n          children: \"High Scores Per Country \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 9\n      }, this), props.data.CountryScores.sort((a, b) => a.name > b.name ? 1 : -1).map((eachCountry, index) => /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table\",\n        bordered: true,\n        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"h1\", {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"table-header\",\n                  children: \"High Scores: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 19,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"countryName\",\n                  children: eachCountry.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 20,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 18,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 17,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"table\",\n              children: props.status ? eachCountry.scores.sort((a, b) => a.s > b.s ? -1 : 1).map((element, i) => /*#__PURE__*/_jsxDEV(\"table\", {\n                bordered: true,\n                className: \"table\",\n                children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n                  children: /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: element.n.toUpperCase() + \":aaa \" + element.s\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 32,\n                    columnNumber: 31\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 31,\n                  columnNumber: 29\n                }, this)\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 30,\n                columnNumber: 27\n              }, this)) : eachCountry.scores.sort((a, b) => a.s < b.s ? -1 : 1).map((element, i) => /*#__PURE__*/_jsxDEV(\"table\", {\n                bordered: true,\n                className: \"table\",\n                children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n                  children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: element.n.toUpperCase() + \": \" + element.s\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 43,\n                    columnNumber: 31\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 42,\n                  columnNumber: 29\n                }, this)\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 27\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Page;\nexport default Page;\n\nvar _c;\n\n$RefreshReg$(_c, \"Page\");","map":{"version":3,"sources":["/Users/cyf/High Score Tables/src/Table.js"],"names":["React","Page","props","data","CountryScores","sort","a","b","name","map","eachCountry","index","status","scores","s","element","i","n","toUpperCase"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AACtB,sBACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE;AAAA,+BAEE;AAAI,UAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,cADF,EAKGA,KAAK,CAACC,IAAN,CAAWC,aAAX,CAAyBC,IAAzB,CAA8B,CAACC,CAAD,EAAIC,CAAJ,KAC7BD,CAAC,CAACE,IAAF,GAASD,CAAC,CAACC,IAAX,GAAkB,CAAlB,GAAsB,CAAC,CADxB,EAECC,GAFD,CAEK,CAACC,WAAD,EAAcC,KAAd,kBACJ;AAAO,QAAA,SAAS,EAAC,OAAjB;AAAyB,QAAA,QAAQ,MAAjC;AAAA,+BACE;AAAA,kCACE;AAAA,mCACE;AAAA,qCACE;AAAA,wCACE;AAAM,kBAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE;AAAM,kBAAA,SAAS,EAAC,aAAhB;AAAA,4BAA+BD,WAAW,CAACF;AAA3C;AAAA;AAAA;AAAA;AAAA,wBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eASE;AAAA,mCACE;AAAI,cAAA,SAAS,EAAC,OAAd;AAAA,wBACGN,KAAK,CAACU,MAAN,GACGF,WAAW,CAACG,MAAZ,CACGR,IADH,CACQ,CAACC,CAAD,EAAIC,CAAJ,KAAWD,CAAC,CAACQ,CAAF,GAAMP,CAAC,CAACO,CAAR,GAAY,CAAC,CAAb,GAAiB,CADpC,EAEGL,GAFH,CAEO,CAACM,OAAD,EAAUC,CAAV,kBACH;AAAO,gBAAA,QAAQ,MAAf;AAAgB,gBAAA,SAAS,EAAC,OAA1B;AAAA,uCACE;AAAA,yCACE;AAAA,8BACGD,OAAO,CAACE,CAAR,CAAUC,WAAV,KAA0B,OAA1B,GAAoCH,OAAO,CAACD;AAD/C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,iBAAuCE,CAAvC;AAAA;AAAA;AAAA;AAAA,sBAHJ,CADH,GAYGN,WAAW,CAACG,MAAZ,CACGR,IADH,CACQ,CAACC,CAAD,EAAIC,CAAJ,KAAWD,CAAC,CAACQ,CAAF,GAAMP,CAAC,CAACO,CAAR,GAAY,CAAC,CAAb,GAAiB,CADpC,EAEGL,GAFH,CAEO,CAACM,OAAD,EAAUC,CAAV,kBACH;AAAO,gBAAA,QAAQ,MAAf;AAAgB,gBAAA,SAAS,EAAC,OAA1B;AAAA,uCACE;AAAA,yCACE;AAAA,8BACGD,OAAO,CAACE,CAAR,CAAUC,WAAV,KAA0B,IAA1B,GAAiCH,OAAO,CAACD;AAD5C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,iBAAuCE,CAAvC;AAAA;AAAA;AAAA;AAAA,sBAHJ;AAbN;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBATF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,SAAuCL,KAAvC;AAAA;AAAA;AAAA;AAAA,cAHD,CALH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAqDD,CAtDD;;KAAMV,I;AAwDN,eAAeA,IAAf","sourcesContent":["import React from \"react\";\n\nconst Page = (props) => {\n  return (\n    <div className=\"table-wrapper\">\n      <div className=\"table-box\">\n        <div>\n       \n          <h1 className=\"title\">High Scores Per Country </h1>\n        </div>\n        {props.data.CountryScores.sort((a, b) =>\n          a.name > b.name ? 1 : -1\n        ).map((eachCountry, index) => (\n          <table className=\"table\" bordered key={index}>\n            <tbody>\n              <tr>\n                <td>\n                  <h1>\n                    <span className=\"table-header\">High Scores: </span>\n                    <span className=\"countryName\">{eachCountry.name}</span>\n                  </h1>\n                </td>\n              </tr>\n              <tr>\n                <td className=\"table\">\n                  {props.status\n                    ? eachCountry.scores\n                        .sort((a, b) => (a.s > b.s ? -1 : 1))\n                        .map((element, i) => (\n                          <table bordered className=\"table\" key={i}>\n                            <tbody>\n                              <td>\n                                {element.n.toUpperCase() + \":aaa \" + element.s}\n                              </td>\n                            </tbody>\n                          </table>\n                        ))\n                    : eachCountry.scores\n                        .sort((a, b) => (a.s < b.s ? -1 : 1))\n                        .map((element, i) => (\n                          <table bordered className=\"table\" key={i}>\n                            <tbody>\n                              <tr>\n                                {element.n.toUpperCase() + \": \" + element.s}\n                              </tr>\n                            </tbody>\n                          </table>\n                        ))}\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Page;\n"]},"metadata":{},"sourceType":"module"}