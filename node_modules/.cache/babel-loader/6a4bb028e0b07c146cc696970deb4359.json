{"ast":null,"code":"var _jsxFileName = \"/Users/cyf/myapp/src/Table.js\";\nimport React from \"react\"; //import {Table} from \"reactstrap\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Page = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App col-12\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex \",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"status\",\n        children: [\"status\", /*#__PURE__*/_jsxDEV(\"i\", {\n          className: props.status ? \"fas fa-arrow-down\" : \"fas fa-arrow-up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"High Scores Per Country \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this), props.data.CountryScores.sort((a, b) => a.name > b.name ? 1 : -1).map((eachCountry, index) => /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table\",\n      bordered: true,\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"score\",\n            children: /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"header\",\n                children: \"High Scores:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 30,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"countryName\",\n                children: eachCountry.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 31,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"small-table\",\n            children: props.status ? eachCountry.scores.sort((a, b) => a.s > b.s ? -1 : 1).map((element, i) => /*#__PURE__*/_jsxDEV(\"table\", {\n              bordered: true,\n              className: \"table\",\n              children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n                className: \"bodyTable\",\n                children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"myName\",\n                    children: element.n.toUpperCase()\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 44,\n                    columnNumber: 33\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 43,\n                  columnNumber: 31\n                }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"myScore\",\n                    children: element.s\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 49,\n                    columnNumber: 33\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 48,\n                  columnNumber: 31\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 29\n              }, this)\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 27\n            }, this)) : eachCountry.scores.sort((a, b) => a.s < b.s ? -1 : 1).map((element, i) => /*#__PURE__*/_jsxDEV(\"table\", {\n              bordered: true,\n              className: \"table\",\n              children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n                className: \"bodyTable\",\n                children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"myName\",\n                    children: element.n.toUpperCase()\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 60,\n                    columnNumber: 33\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 59,\n                  columnNumber: 31\n                }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"myScore\",\n                    children: element.s\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 65,\n                    columnNumber: 33\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 64,\n                  columnNumber: 31\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 29\n              }, this)\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 27\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Page;\nexport default Page;\n\nvar _c;\n\n$RefreshReg$(_c, \"Page\");","map":{"version":3,"sources":["/Users/cyf/myapp/src/Table.js"],"names":["React","Page","props","status","data","CountryScores","sort","a","b","name","map","eachCountry","index","scores","s","element","i","n","toUpperCase"],"mappings":"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","sourcesContent":["import React from \"react\";\n//import {Table} from \"reactstrap\";\n\nconst Page = (props) => {\n  return (\n    <div className=\"App col-12\">\n      <div className=\"d-flex \">\n        <span className=\"status\">\n          status\n          <i\n            className={props.status ? \"fas fa-arrow-down\" : \"fas fa-arrow-up\"}\n          ></i>\n        </span>\n        {/* <button\n          onClick={props.handleAscending}\n          className={props.status ? \"Ascending\" : \"Descending\"}\n          type=\"button\"\n        >\n          {props.status ? `Click for Ascending` : `Click for Descending`}{\" \"}\n        </button> */}\n        <h1>High Scores Per Country </h1>\n      </div>\n      {props.data.CountryScores.sort((a, b) => (a.name > b.name ? 1 : -1)).map(\n        (eachCountry, index) => (\n          <table className=\"table\" bordered key={index}>\n            <tbody className=\"container\">\n              <tr>\n                <td className=\"score\">\n                  <h1>\n                    <span className=\"header\">High Scores:</span>\n                    <span className=\"countryName\">{eachCountry.name}</span>\n                  </h1>\n                </td>\n              </tr>\n              <tr>\n                <td className=\"small-table\">\n                  {props.status\n                    ? eachCountry.scores\n                        .sort((a, b) => (a.s > b.s ? -1 : 1))\n                        .map((element, i) => (\n                          <table bordered className=\"table\" key={i}>\n                            <tbody className=\"bodyTable\">\n                              <tr>\n                                <td className=\"myName\">\n                                  {element.n.toUpperCase()}\n                                </td>\n                              </tr>\n                              <tr>\n                                <td className=\"myScore\">{element.s}</td>\n                              </tr>\n                            </tbody>\n                          </table>\n                        ))\n                    : eachCountry.scores\n                        .sort((a, b) => (a.s < b.s ? -1 : 1))\n                        .map((element, i) => (\n                          <table bordered className=\"table\" key={i}>\n                            <tbody className=\"bodyTable\">\n                              <tr>\n                                <td className=\"myName\">\n                                  {element.n.toUpperCase()}\n                                </td>\n                              </tr>\n                              <tr>\n                                <td className=\"myScore\">{element.s}</td>\n                              </tr>\n                            </tbody>\n                          </table>\n                        ))}\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        )\n      )}\n    </div>\n  );\n};\n\nexport default Page;\n"]},"metadata":{},"sourceType":"module"}